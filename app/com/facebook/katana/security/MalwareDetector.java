package com.facebook.katana.security;

import android.content.Context;
import android.content.pm.PackageInfo;
import android.content.pm.PermissionInfo;
import com.facebook.analytics.AnalyticsLogger;
import com.facebook.analytics.HoneyClientEvent;
import com.facebook.content.PermissionChecks;
import com.facebook.orca.debug.BLog;
import com.facebook.orca.prefs.OrcaSharedPreferences;
import com.facebook.orca.prefs.OrcaSharedPreferences.Editor;
import com.facebook.orca.prefs.PrefKey;
import com.facebook.orca.prefs.SharedPrefKeys;
import java.util.Iterator;
import java.util.List;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public class MalwareDetector
{
  private static final PrefKey a = (PrefKey)SharedPrefKeys.b.c("malware_scan_finished");
  private final AnalyticsLogger b;
  private final OrcaSharedPreferences c;

  public MalwareDetector(AnalyticsLogger paramAnalyticsLogger, OrcaSharedPreferences paramOrcaSharedPreferences)
  {
    this.b = paramAnalyticsLogger;
    this.c = paramOrcaSharedPreferences;
  }

  public void a(Context paramContext)
  {
    if (!this.c.a(a, false))
      this.c.b().a(a, true);
    try
    {
      List localList = PermissionChecks.c(paramContext);
      if ((localList != null) && (localList.size() > 0))
        a(localList);
      label62: return;
    }
    catch (Exception localException)
    {
      break label62;
    }
  }

  public void a(List<PackageInfo> paramList)
  {
    JSONArray localJSONArray1;
    try
    {
      localJSONArray1 = new JSONArray();
      Iterator localIterator = paramList.iterator();
      while (localIterator.hasNext())
      {
        PackageInfo localPackageInfo = (PackageInfo)localIterator.next();
        JSONObject localJSONObject = new JSONObject();
        localJSONObject.put("name", localPackageInfo.packageName);
        JSONArray localJSONArray2 = new JSONArray();
        PermissionInfo[] arrayOfPermissionInfo = localPackageInfo.permissions;
        int i = arrayOfPermissionInfo.length;
        for (int j = 0; j < i; j++)
          localJSONArray2.put(arrayOfPermissionInfo[j].name);
        localJSONObject.put("permissions", localJSONArray2);
        localJSONArray1.put(localJSONObject);
      }
    }
    catch (JSONException localJSONException)
    {
      BLog.e("MalwareDetector", localJSONException.getMessage());
    }
    while (true)
    {
      return;
      HoneyClientEvent localHoneyClientEvent = new HoneyClientEvent("android_malware_detected_event");
      localHoneyClientEvent.d("malware_detector");
      localHoneyClientEvent.b("description", localJSONArray1.toString());
      this.b.b(localHoneyClientEvent);
    }
  }
}

/* Location:           /data1/software/jd-gui/com.facebook.katana_2.0_liqucn.com-dex2jar.jar
 * Qualified Name:     com.facebook.katana.security.MalwareDetector
 * JD-Core Version:    0.6.0
 */